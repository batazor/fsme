/**
 * FSME
 * FSME server for UI
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Error', 'model/Fsm'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Error'), require('../model/Fsm'));
  } else {
    // Browser globals (root is window)
    if (!root.Fsme) {
      root.Fsme = {};
    }
    root.Fsme.FsmApi = factory(root.Fsme.ApiClient, root.Fsme.Error, root.Fsme.Fsm);
  }
}(this, function(ApiClient, Error, Fsm) {
  'use strict';

  /**
   * Fsm service.
   * @module api/FsmApi
   * @version 0.1.0
   */

  /**
   * Constructs a new FsmApi. 
   * @alias module:api/FsmApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addFSM operation.
     * @callback module:api/FsmApi~addFSMCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Fsm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Fsm} opts.body 
     * @param {module:api/FsmApi~addFSMCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Fsm}
     */
    this.addFSM = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/io.goswagger.examples.todo-list.v1+json'];
      var accepts = ['application/io.goswagger.examples.todo-list.v1+json'];
      var returnType = Fsm;

      return this.apiClient.callApi(
        '/', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the destroyFSM operation.
     * @callback module:api/FsmApi~destroyFSMCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/FsmApi~destroyFSMCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.destroyFSM = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling destroyFSM");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/io.goswagger.examples.todo-list.v1+json'];
      var accepts = ['application/io.goswagger.examples.todo-list.v1+json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getFSM operation.
     * @callback module:api/FsmApi~getFSMCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Fsm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/FsmApi~getFSMCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Fsm}
     */
    this.getFSM = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getFSM");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/io.goswagger.examples.todo-list.v1+json'];
      var accepts = ['application/io.goswagger.examples.todo-list.v1+json'];
      var returnType = Fsm;

      return this.apiClient.callApi(
        '/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getFSMList operation.
     * @callback module:api/FsmApi~getFSMListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Fsm>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.enable 
     * @param {Number} opts.limit  (default to 10)
     * @param {module:api/FsmApi~getFSMListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Fsm>}
     */
    this.getFSMList = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'enable': opts['enable'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/io.goswagger.examples.todo-list.v1+json'];
      var accepts = ['application/io.goswagger.examples.todo-list.v1+json'];
      var returnType = [Fsm];

      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateFSM operation.
     * @callback module:api/FsmApi~updateFSMCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Fsm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/Fsm} opts.body 
     * @param {module:api/FsmApi~updateFSMCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Fsm}
     */
    this.updateFSM = function(id, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateFSM");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/io.goswagger.examples.todo-list.v1+json'];
      var accepts = ['application/io.goswagger.examples.todo-list.v1+json'];
      var returnType = Fsm;

      return this.apiClient.callApi(
        '/{id}', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
