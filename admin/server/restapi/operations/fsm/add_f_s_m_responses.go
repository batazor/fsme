// Code generated by go-swagger; DO NOT EDIT.

package fsm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/batazor/fsme/admin/server/models"
)

// AddFSMCreatedCode is the HTTP code returned for type AddFSMCreated
const AddFSMCreatedCode int = 201

/*AddFSMCreated Created

swagger:response addFSMCreated
*/
type AddFSMCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Fsm `json:"body,omitempty"`
}

// NewAddFSMCreated creates AddFSMCreated with default headers values
func NewAddFSMCreated() *AddFSMCreated {

	return &AddFSMCreated{}
}

// WithPayload adds the payload to the add f s m created response
func (o *AddFSMCreated) WithPayload(payload *models.Fsm) *AddFSMCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add f s m created response
func (o *AddFSMCreated) SetPayload(payload *models.Fsm) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFSMCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddFSMDefault error

swagger:response addFSMDefault
*/
type AddFSMDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddFSMDefault creates AddFSMDefault with default headers values
func NewAddFSMDefault(code int) *AddFSMDefault {
	if code <= 0 {
		code = 500
	}

	return &AddFSMDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add f s m default response
func (o *AddFSMDefault) WithStatusCode(code int) *AddFSMDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add f s m default response
func (o *AddFSMDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add f s m default response
func (o *AddFSMDefault) WithPayload(payload *models.Error) *AddFSMDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add f s m default response
func (o *AddFSMDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFSMDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
