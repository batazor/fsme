// Code generated by go-swagger; DO NOT EDIT.

package fsm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/batazor/fsme/admin/server/models"
)

// UpdateFSMOKCode is the HTTP code returned for type UpdateFSMOK
const UpdateFSMOKCode int = 200

/*UpdateFSMOK OK

swagger:response updateFSMOK
*/
type UpdateFSMOK struct {

	/*
	  In: Body
	*/
	Payload *models.Fsm `json:"body,omitempty"`
}

// NewUpdateFSMOK creates UpdateFSMOK with default headers values
func NewUpdateFSMOK() *UpdateFSMOK {

	return &UpdateFSMOK{}
}

// WithPayload adds the payload to the update f s m o k response
func (o *UpdateFSMOK) WithPayload(payload *models.Fsm) *UpdateFSMOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update f s m o k response
func (o *UpdateFSMOK) SetPayload(payload *models.Fsm) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFSMOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateFSMDefault error

swagger:response updateFSMDefault
*/
type UpdateFSMDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateFSMDefault creates UpdateFSMDefault with default headers values
func NewUpdateFSMDefault(code int) *UpdateFSMDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateFSMDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update f s m default response
func (o *UpdateFSMDefault) WithStatusCode(code int) *UpdateFSMDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update f s m default response
func (o *UpdateFSMDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update f s m default response
func (o *UpdateFSMDefault) WithPayload(payload *models.Error) *UpdateFSMDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update f s m default response
func (o *UpdateFSMDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFSMDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
