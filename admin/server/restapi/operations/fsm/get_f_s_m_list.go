// Code generated by go-swagger; DO NOT EDIT.

package fsm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetFSMListHandlerFunc turns a function with the right signature into a get f s m list handler
type GetFSMListHandlerFunc func(GetFSMListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetFSMListHandlerFunc) Handle(params GetFSMListParams) middleware.Responder {
	return fn(params)
}

// GetFSMListHandler interface for that can handle valid get f s m list params
type GetFSMListHandler interface {
	Handle(GetFSMListParams) middleware.Responder
}

// NewGetFSMList creates a new http.Handler for the get f s m list operation
func NewGetFSMList(ctx *middleware.Context, handler GetFSMListHandler) *GetFSMList {
	return &GetFSMList{Context: ctx, Handler: handler}
}

/*GetFSMList swagger:route GET / fsm getFSMList

GetFSMList get f s m list API

*/
type GetFSMList struct {
	Context *middleware.Context
	Handler GetFSMListHandler
}

func (o *GetFSMList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetFSMListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
