// Code generated by go-swagger; DO NOT EDIT.

package fsm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/batazor/fsme/admin/server/models"
)

// GetFSMOKCode is the HTTP code returned for type GetFSMOK
const GetFSMOKCode int = 200

/*GetFSMOK OK

swagger:response getFSMOK
*/
type GetFSMOK struct {

	/*
	  In: Body
	*/
	Payload *models.Fsm `json:"body,omitempty"`
}

// NewGetFSMOK creates GetFSMOK with default headers values
func NewGetFSMOK() *GetFSMOK {

	return &GetFSMOK{}
}

// WithPayload adds the payload to the get f s m o k response
func (o *GetFSMOK) WithPayload(payload *models.Fsm) *GetFSMOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get f s m o k response
func (o *GetFSMOK) SetPayload(payload *models.Fsm) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFSMOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetFSMDefault error

swagger:response getFSMDefault
*/
type GetFSMDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFSMDefault creates GetFSMDefault with default headers values
func NewGetFSMDefault(code int) *GetFSMDefault {
	if code <= 0 {
		code = 500
	}

	return &GetFSMDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get f s m default response
func (o *GetFSMDefault) WithStatusCode(code int) *GetFSMDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get f s m default response
func (o *GetFSMDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get f s m default response
func (o *GetFSMDefault) WithPayload(payload *models.Error) *GetFSMDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get f s m default response
func (o *GetFSMDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFSMDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
